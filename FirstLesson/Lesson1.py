import numpy as np
P = np.array([
    #1     2     3     4     5     6     7     8     9     10    11
    [0.17, 0,    0.83, 0,    0,    0,    0,    0,    0,    0,    0],  # 1
    [0.39, 0.05, 0.24, 0,    0.11, 0.21, 0,    0,    0,    0,    0],  # 2
    [0.22, 0,    0.03, 0.21, 0,    0,    0.18, 0.13, 0.23, 0,    0],  # 3
    [0,    0.09, 0.19, 0.07, 0,    0,    0.49, 0.16, 0,    0,    0],  # 4
    [0,    0,    0,    0.31, 0.04, 0,    0.36, 0.29, 0,    0,    0],  # 5
    [0,    0.05, 0,    0,    0.27, 0.37, 0.27, 0,    0.04, 0,    0],  # 6
    [0,    0,    0.01, 0,    0.42, 0.12, 0.06, 0.27, 0,    0.12, 0],  # 7
    [0,    0,    0,    0,    0,    0,    0,    0.96, 0.04, 0,    0],  # 8
    [0,    0,    0.63, 0,    0,    0.31, 0,    0,    0.06, 0,    0],  # 9
    [0,    0,    0,    0,    0,    0,    0.36, 0,    0.13, 0.19, 0.32],  # 10
    [0,    0,    0,    0,    0,    0,    0.45, 0,    0.30, 0,    0.25],  # 11
])



"""
Task 1
"""
# P = np.array([
#     #1     2     3     4     5     6     7     8     9     10    11
#     [0.17, 0,    0.83, 0,    0,    0,    0,    0,    0,    0,    0],  # 1
#     [0.39, 0.05, 0.24, 0,    0.11, 0.21, 0,    0,    0,    0,    0],  # 2
#     [0.22, 0,    0.03, 0.21, 0,    0,    0.18, 0.13, 0.23, 0,    0],  # 3
#     [0,    0.09, 0.19, 0.07, 0,    0,    0.49, 0.16, 0,    0,    0],  # 4
#     [0,    0,    0,    0.31, 0.04, 0,    0.36, 0.29, 0,    0,    0],  # 5
#     [0,    0.05, 0,    0,    0.27, 0.37, 0.27, 0,    0.04, 0,    0],  # 6
#     [0,    0,    0.01, 0,    0.42, 0.12, 0.06, 0.27, 0,    0.12, 0],  # 7
#     [0,    0,    0,    0,    0,    0,    0,    0.96, 0.04, 0,    0],  # 8
#     [0,    0,    0.63, 0,    0,    0.31, 0,    0,    0.06, 0,    0],  # 9
#     [0,    0,    0,    0,    0,    0,    0.36, 0,    0.13, 0.19, 0.32],  # 10
#     [0,    0,    0,    0,    0,    0,    0.45, 0,    0.30, 0,    0.25],  # 11
#
# ])
# k = 10
# t1 = np.linalg.matrix_power(P, k)
# print(t1)
# print(t1[0][6])



def task1(matrix, k, i, j):
    ret = np.linalg.matrix_power(matrix, k)
    print(ret)
    return ret[i - 1][j - 1]


# print(task1(matrix=P, k=10, i=1, j=7))


"""
Task 2
"""

A = np.array([0.04, 0.04, 0.09, 0.03, 0.11, 0, 0.19, 0.17, 0.12, 0.16, 0.05])


def task2(matrix, k, a_start):
    return a_start @ np.linalg.matrix_power(matrix, k)


# print(task2(matrix=P, k=10, a_start=A))


"""
Task 3
"""

# k = 8
# i = 8
# j = 7





# P = np.array([
#     [0.4, 0.3, 0.3],
#     [0.2, 0.5, 0.3],
#     [0.1, 0.2, 0.7]
# ])


# def task3():
# i = 1
# j = 3
# k = 3
# m = j
#
# for o in range():
#     pass
#
# for t in P:
#     print(t)
#
# for i in range():
#     pass
# for t in range(P[0]):
#     pass


"""
Task 4
"""


# def task4():


"""
Task 5
"""


# def task5():


"""
Task 6
"""


# def task6():

"""
Task 7
"""


# def task7():

"""
Task 8
"""


# def task8():

"""
Task 9
"""


# def task9():
